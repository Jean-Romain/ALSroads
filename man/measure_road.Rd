% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/road_tools.R
\name{measure_road}
\alias{measure_road}
\title{Align and measure a road from Lidar data}
\usage{
measure_road(road, ctg, param, water = NULL, relocate = FALSE)
}
\arguments{
\item{road}{a single line (sf format)}

\item{ctg}{a non-normalized LAScatalog object from lidR package}

\item{param}{a list of many parameters}

\item{water}{a set of polygons (sf format) of water bodies. This can help the method for road
very close to river or lakes}

\item{relocate}{bool. If the road is mis-positioned it will
try to retrieve its actual location befor to compute some metrics}
}
\value{
a list with a several sf objects including stuff to debug in DEBUG +
stuff for end use in OUTPUT
}
\description{
From a road (line), extracts the line with a buffer from the point cloud and recomputes
the actual positioning of the road and compute some metrics for the road such as its width
or drivable width as well as its states (exists, no longer exists)
}
\examples{
library(lidR)
library(sf)

dir  <- system.file("extdata", "", package="MFFProads")
file <- system.file("extdata", "road_971487.gpkg", package="MFFProads")
ctg  <- readLAScatalog(dir)
road <- st_read(file, quiet = TRUE)

plot(ctg)
plot(st_geometry(road), add = TRUE, col = "red")

res <- measure_road(road, ctg, mffproads_default_parameters, relocate = TRUE)

plot(st_geometry(road), col = "red") # Inaccurate road track
plot(st_geometry(res), col = "blue", add = TRUE) # Corrected road track

mapview::mapview(list(road, res),
  layer.name = c("Inaccurate", "Corrected"),
  color = c("red", "blue"), map.type = "Esri.WorldImagery")

\dontrun{
# DEBUG

options(MFFProads.debug.finding = TRUE)
options(MFFProads.debug.measuring = FALSE)
options(MFFProads.debug.metrics = FALSE)
res <- measure_road(road, ctg, mffproads_default_parameters, relocate = TRUE)

options(MFFProads.debug.finding = FALSE)
options(MFFProads.debug.measuring = TRUE)
options(MFFProads.debug.metrics = FALSE)
res <- measure_road(road, ctg, mffproads_default_parameters, relocate = TRUE)

options(MFFProads.debug.finding = FALSE)
options(MFFProads.debug.measuring = FALSE)
options(MFFProads.debug.metrics = TRUE)
res <- measure_road(road, ctg, mffproads_default_parameters, relocate = TRUE)
}
}
